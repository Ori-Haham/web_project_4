!function(){"use strict";var e={874:function(e,t,r){e.exports=r.p+"3220aa0123cd7dc3fc11.jpg"},937:function(e,t,r){e.exports=r.p+"c75819857ff1599f0c50.svg"}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,r),s.exports}r.p="",function(){class e{constructor(e){let{baseUrl:t,authorizationCode:r}=e;this._baseUrl=t,this._authorization=r}returnJson(){return fetch(this._baseUrl,{headers:{authorization:this._authorization}}).then((e=>e.json()))}updateUserData(e,t){return fetch(this._baseUrl,{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})})}postCard(e,t){return fetch(this._baseUrl,{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:t})})}deleteCard(e){return fetch("https://around.nomoreparties.co/v1/group-12/cards/".concat(e),{method:"DELETE",headers:{authorization:this._authorization}})}likeCard(e,t){return fetch("https://around.nomoreparties.co/v1/group-12/cards/likes/".concat(t),{method:e,headers:{authorization:this._authorization}})}}var t=r(937);r(874);const n={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"};class o{constructor(e,t,r){let{handleCardClick:n,updateApiOnLike:o}=r;this._name=e.name,this._link=e.link,this._likes=e.likes,this._cardSelector=t,this._handleCardClick=n,this._updateApiOnLike=o}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._handleCardClickListener(),this._handleCardLikeButton()}_handleCardClickListener(){this._element.querySelector(".card__image").addEventListener("click",(e=>{this._handleCardClick(e)}))}_handleCardLikeButton(){this._element.querySelector(".card__like-button").addEventListener("click",(function(e){e.target.classList.toggle("card__like-button_active"),this._updateApiOnLike()}))}generateCard(){this._element=this._getTemplate(),this._setEventListeners();const e=this._element.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._element.querySelector(".card__location").textContent=this._name,this._likesCounte=this._element.querySelector(".card__likeCounte"),this._likesCounte.textContent=this._likes.length,this._element}}function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class i extends o{constructor(e,t,r){let{handleCardClick:n,updateApiOnLike:o,handleDeleteButtonClick:i,tt:a}=r;super(e,t,{handleCardClick:n,updateApiOnLike:o}),s(this,"_handelDelete",(()=>{this._tt(),this._element.remove(),this._element=null})),s(this,"_setEventListeners",(()=>{super._setEventListeners(),this._handleDeleteButton(),this.x()})),this._handleDeleteButtonClick=i,this._tt=a}x(){this._element.querySelector(".popup__button").addEventListener("click",this._handelDelete)}_handleDeleteButton(){this._element.querySelector(".card__remove-button").addEventListener("click",(e=>{this._handleDeleteButtonClick(e),console.log(e)}))}}class a{constructor(e,t){var r,n;n=()=>{this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(this._inputList,this._buttonElement)},(r="resetValidation")in this?Object.defineProperty(this,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[r]=n,this._formSelector=e,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}_showInputError(e,t){this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this._inputErrorClass),this._errorElement.textContent=t,this._errorElement.classList.add(this._errorClass)}_hideInputError(e){this._errorElement=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))}enableValidation(){this._formElement=document.querySelector(this._formSelector),this._setEventListeners()}}function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class u{constructor(e){l(this,"_handleEscClose",(e=>{"Escape"===e.key&&this._popup.classList.add("popup-hidden")})),l(this,"_handleMouseDown",(e=>{const t=this._popup.querySelector(".popup__close-button");(e.target===t||e.target.classList.contains("popup"))&&this.close()})),this._popup=e}open(){this._popup.classList.remove("popup-hidden"),this.setEventListeners()}close(){this._popup.classList.add("popup-hidden"),this.removeEventListeners()}setEventListeners(){window.addEventListener("keydown",this._handleEscClose),this._popup.addEventListener("mousedown",this._handleMouseDown)}removeEventListeners(){window.removeEventListener("keydown",this._handleEscClose),this._popup.removeEventListener("mousedown",this._handleMouseDown)}}function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class d extends u{constructor(e,t,r){let{handleFormSubmit:n}=r;super(e),c(this,"close",(()=>{super.close(),this._form.reset(),this.removeEventListeners()})),c(this,"setEventListeners",(()=>{super.setEventListeners(),this._form.addEventListener("submit",this._handleSubmit)})),c(this,"removeEventListeners",(()=>{super.removeEventListeners(),this._form.removeEventListener("submit",this._handleSubmit)})),c(this,"_handleSubmit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),this._form=document.querySelector(t),this._handleFormSubmit=n}_getInputValues(){const e=[...this._popup.querySelectorAll(".popup__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}}const h=document.querySelector(".profile__edit-button"),p=document.querySelector(".profile__add-button"),_=document.querySelector(".profile__name"),m=document.querySelector(".profile__about-me"),b=(document.querySelector(".profile__image"),document.querySelector(".profile-popup")),f=(b.querySelector(".profile-popup__close-button"),document.querySelector(".card-popup")),v=(f.querySelector(".card-popup__close-button"),document.querySelector(".profile-form")),E=v.querySelector(".profile-form__name"),C=v.querySelector(".profile-form__about-me"),S=(v.querySelector(".profile-form__submit-button"),document.querySelector(".card-form")),g=S.querySelector(".card-form__place"),y=S.querySelector(".card-form__url"),L=document.querySelector(".cards"),k=document.querySelector(".image-popup"),q=(k.querySelector(".image-popup__close-button"),k.querySelector(".image-popup__image")),w=k.querySelector(".image-popup__location"),I={name:_.textContent,about:m.textContent},x=new e({baseUrl:"https://around.nomoreparties.co/v1/group-12/cards",authorizationCode:"37c0271e-6c35-4cdb-bfdd-3d6b737f9411"}),B=new e({baseUrl:"https://around.nomoreparties.co/v1/group-12/users/me",authorizationCode:"37c0271e-6c35-4cdb-bfdd-3d6b737f9411"}),U=new e({baseUrl:"https://around.nomoreparties.co/v1/group-12/users/me",authorizationCode:"37c0271e-6c35-4cdb-bfdd-3d6b737f9411"}),z=new e({baseUrl:"https://around.nomoreparties.co/v1/group-12/cards",authorizationCode:"37c0271e-6c35-4cdb-bfdd-3d6b737f9411"}),D=new e("","37c0271e-6c35-4cdb-bfdd-3d6b737f9411");function O(){B.returnJson().then((e=>{var t,r;t=e.name,r=e.about,_.textContent=t,m.textContent=r}))}const j=new class{constructor(e){let{data:t}=e;this._nameElement=t.name,this._aboutMeElement=t.about}getUserInfo(){const e={};return e.name=this._nameElement,e.about=this._aboutMeElement,e}setUserInfo(e,t){this._nameElement=e,this._aboutMeElement=t}}({data:I});B.returnJson().then((e=>{j.setUserInfo(e.name,e.about)}));const P=new class extends u{constructor(e,t,r){var n,o;super(e),o=e=>{let{src:t,alt:r}=e;super.open(),this._popupImage.src=t,this._popupImage.alt=r,this._popupLocation.textContent=r},(n="open")in this?Object.defineProperty(this,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):this.open=o,this._popupImage=t,this._popupLocation=r}}(k,q,w),V=new a(".profile-form",n),A=new a(".card-form",n),T=new d(b,".profile-form",{handleFormSubmit:()=>{j.setUserInfo(E.value,C.value),U.updateUserData(j.getUserInfo().name,j.getUserInfo().about).then((()=>{O()})),T.close()}}),M=new class{constructor(e,t){let{data:r,renderer:n}=e;this._data=r,this._container=t,this._renderer=n}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:function(t){!function(){if("3dcd812fefd0b46115095582"===t.owner._id){const r=new i(t,"#card-template",{handleCardClick:e=>{P.open({src:e.target.src,alt:e.target.alt})},tt:()=>{new e("","37c0271e-6c35-4cdb-bfdd-3d6b737f9411").deleteCard(t._id).then((()=>{console.log(t._id)}))},handleDeleteButtonClick:()=>{new u(document.querySelector(".deleteCardPopup")).open()},updateApiOnLike:()=>{const e=document.querySelector(".card__like-button");evt.target.classList.contains("card__like-button_active")?D.likeCard("PUT",t._id).then((()=>{e.textContent=t.like.length})).then((()=>{console.log(t)})):D.likeCard("DELETE",t._id).then((()=>{e.textContent=t.like.length})).then((()=>{console.log(t)}))}}).generateCard();M.addItem(r)}else{const e=new o(t,"#initial-cards-template",{handleCardClick:e=>{P.open({src:e.target.src,alt:e.target.alt})}}).generateCard();M.addItem(e)}}()}},L);x.returnJson().then((e=>{M.renderItems(e)}));const J=new d(f,".card-form",{handleFormSubmit:()=>{z.postCard(g.value,y.value).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status)))).then((e=>(console.log(e),e))).then((e=>{M.renderItems([e])})).then((()=>{J.close()}))}});O(),h.addEventListener("click",(function(){!function(){const e=j.getUserInfo();E.value=e.name,C.value=e.about}(),V.resetValidation(),T.open()})),p.addEventListener("click",(function(){A.resetValidation(),J.open()})),V.enableValidation(),A.enableValidation(),document.getElementById("logo").src=t}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,